# Generated by Django 2.0.3 on 2018-05-30 02:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Card',
            fields=[
                ('card_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='card UUID')),
                ('reviewed', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_reviewed', models.DateTimeField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CardDeck',
            fields=[
                ('card_deck_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.Card')),
            ],
        ),
        migrations.CreateModel(
            name='CardFeedback',
            fields=[
                ('feedback_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='feedback UUID')),
                ('date_submitted', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment', models.TextField(max_length=2000)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.Card')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CardTag',
            fields=[
                ('card_tag_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.Card')),
            ],
        ),
        migrations.CreateModel(
            name='Deck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deck_uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='deck UUID')),
                ('deck_name', models.CharField(max_length=255)),
                ('reviewed', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_reviewed', models.DateTimeField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeckFeedback',
            fields=[
                ('feedback_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='feedback UUID')),
                ('date_submitted', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment', models.TextField(max_length=2000)),
                ('deck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.Deck')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeckStats',
            fields=[
                ('deck_stats_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='deck stats UUID')),
                ('date_completed', models.DateTimeField(default=django.utils.timezone.now)),
                ('number_questions', models.IntegerField(default=0, verbose_name='number of questions')),
                ('number_correct', models.IntegerField(default=0)),
                ('number_partially_correct', models.IntegerField(default=0)),
                ('number_incorrect', models.IntegerField(default=0)),
                ('deck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.Deck')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DeckTag',
            fields=[
                ('deck_tag_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('deck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.Deck')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalCard',
            fields=[
                ('card_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='card UUID')),
                ('reviewed', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_reviewed', models.DateTimeField(blank=True, default=None, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical card',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCardDeck',
            fields=[
                ('card_deck_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='UUID')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('card', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Card')),
                ('deck', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Deck')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical card deck',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCardTag',
            fields=[
                ('card_tag_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='UUID')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('card', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Card')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical card tag',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDeck',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deck_uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='deck UUID')),
                ('deck_name', models.CharField(max_length=255)),
                ('reviewed', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_reviewed', models.DateTimeField(blank=True, default=None, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical deck',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDeckStats',
            fields=[
                ('deck_stats_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='deck stats UUID')),
                ('date_completed', models.DateTimeField(default=django.utils.timezone.now)),
                ('number_questions', models.IntegerField(default=0, verbose_name='number of questions')),
                ('number_correct', models.IntegerField(default=0)),
                ('number_partially_correct', models.IntegerField(default=0)),
                ('number_incorrect', models.IntegerField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('deck', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Deck')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical deck stats',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDeckTag',
            fields=[
                ('deck_tag_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='UUID')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('deck', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Deck')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical deck tag',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMatchingAnswer',
            fields=[
                ('answer_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='answer UUID')),
                ('side', models.CharField(choices=[('l', 'Left'), ('r', 'Right')], default='l', max_length=1)),
                ('order', models.PositiveIntegerField(default=1)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical matching answer',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMatchingContainer',
            fields=[
                ('container_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='container UUID')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical matching container',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMediaPart',
            fields=[
                ('part_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='part UUID')),
                ('order', models.PositiveIntegerField(default=1)),
                ('media_type', models.CharField(choices=[('a', 'Audio'), ('i', 'Image'), ('v', 'Video')], default='i', max_length=1)),
                ('media', models.TextField(max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical media part',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMultipleChoiceAnswer',
            fields=[
                ('answer_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='answer UUID')),
                ('order', models.PositiveIntegerField(default=1)),
                ('correct', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical multiple choice answer',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMultipleChoiceContainer',
            fields=[
                ('container_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='container UUID')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical multiple choice container',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPartContainer',
            fields=[
                ('container_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='container UUID')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical part container',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalReference',
            fields=[
                ('reference_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='reference UUID')),
                ('reference', models.TextField(max_length=500)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('card', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Card')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical reference',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSynonym',
            fields=[
                ('synonym_name', models.CharField(db_index=True, max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical synonym',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTag',
            fields=[
                ('tag_name', models.CharField(db_index=True, max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical tag',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTextPart',
            fields=[
                ('part_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='part UUID')),
                ('order', models.PositiveIntegerField(default=1)),
                ('text', models.TextField(max_length=2000)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical text part',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalUserStats',
            fields=[
                ('user_stats_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='user stats UUID')),
                ('number_decks', models.IntegerField(default=0, verbose_name='decks completed')),
                ('number_questions', models.IntegerField(default=0, verbose_name='questions completed')),
                ('number_correct', models.IntegerField(default=0)),
                ('number_partially_correct', models.IntegerField(default=0)),
                ('number_incorrect', models.IntegerField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user stats',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='MatchingAnswer',
            fields=[
                ('answer_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='answer UUID')),
                ('side', models.CharField(choices=[('l', 'Left'), ('r', 'Right')], default='l', max_length=1)),
                ('order', models.PositiveIntegerField(default=1)),
                ('pair', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='flash_cards.MatchingAnswer')),
            ],
        ),
        migrations.CreateModel(
            name='MatchingContainer',
            fields=[
                ('container_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='container UUID')),
            ],
        ),
        migrations.CreateModel(
            name='MediaPart',
            fields=[
                ('part_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='part UUID')),
                ('order', models.PositiveIntegerField(default=1)),
                ('media_type', models.CharField(choices=[('a', 'Audio'), ('i', 'Image'), ('v', 'Video')], default='i', max_length=1)),
                ('media', models.FileField(upload_to='flash_cards/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MultipleChoiceAnswer',
            fields=[
                ('answer_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='answer UUID')),
                ('order', models.PositiveIntegerField(default=1)),
                ('correct', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MultipleChoiceContainer',
            fields=[
                ('container_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='container UUID')),
            ],
        ),
        migrations.CreateModel(
            name='PartContainer',
            fields=[
                ('container_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='container UUID')),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('reference_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='reference UUID')),
                ('reference', models.TextField(max_length=500)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='references', to='flash_cards.Card')),
            ],
        ),
        migrations.CreateModel(
            name='Synonym',
            fields=[
                ('synonym_name', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_name', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='TextPart',
            fields=[
                ('part_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='part UUID')),
                ('order', models.PositiveIntegerField(default=1)),
                ('text', models.TextField(max_length=2000)),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.PartContainer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserStats',
            fields=[
                ('user_stats_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='user stats UUID')),
                ('number_decks', models.IntegerField(default=0, verbose_name='decks completed')),
                ('number_questions', models.IntegerField(default=0, verbose_name='questions completed')),
                ('number_correct', models.IntegerField(default=0)),
                ('number_partially_correct', models.IntegerField(default=0)),
                ('number_incorrect', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='synonym',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='synonyms', to='flash_cards.Tag'),
        ),
        migrations.AddField(
            model_name='multiplechoiceanswer',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.MultipleChoiceContainer'),
        ),
        migrations.AddField(
            model_name='multiplechoiceanswer',
            name='part_container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.PartContainer'),
        ),
        migrations.AddField(
            model_name='mediapart',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.PartContainer'),
        ),
        migrations.AddField(
            model_name='matchinganswer',
            name='part_container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.PartContainer'),
        ),
        migrations.AddField(
            model_name='matchinganswer',
            name='question_container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.MatchingContainer'),
        ),
        migrations.AddField(
            model_name='historicaltextpart',
            name='container',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.PartContainer'),
        ),
        migrations.AddField(
            model_name='historicaltextpart',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalsynonym',
            name='tag',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Tag'),
        ),
        migrations.AddField(
            model_name='historicalmultiplechoiceanswer',
            name='container',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.MultipleChoiceContainer'),
        ),
        migrations.AddField(
            model_name='historicalmultiplechoiceanswer',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalmultiplechoiceanswer',
            name='part_container',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.PartContainer'),
        ),
        migrations.AddField(
            model_name='historicalmediapart',
            name='container',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.PartContainer'),
        ),
        migrations.AddField(
            model_name='historicalmediapart',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalmatchinganswer',
            name='pair',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.MatchingAnswer'),
        ),
        migrations.AddField(
            model_name='historicalmatchinganswer',
            name='part_container',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.PartContainer'),
        ),
        migrations.AddField(
            model_name='historicalmatchinganswer',
            name='question_container',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.MatchingContainer'),
        ),
        migrations.AddField(
            model_name='historicaldecktag',
            name='tag',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Tag'),
        ),
        migrations.AddField(
            model_name='historicalcardtag',
            name='tag',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Tag'),
        ),
        migrations.AddField(
            model_name='historicalcard',
            name='answer_freeform',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.PartContainer'),
        ),
        migrations.AddField(
            model_name='historicalcard',
            name='answer_matching',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.MatchingAnswer'),
        ),
        migrations.AddField(
            model_name='historicalcard',
            name='answer_multiple_choice',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.MultipleChoiceContainer'),
        ),
        migrations.AddField(
            model_name='historicalcard',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcard',
            name='question',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.PartContainer'),
        ),
        migrations.AddField(
            model_name='historicalcard',
            name='rationale',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.PartContainer'),
        ),
        migrations.AddField(
            model_name='decktag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.Tag'),
        ),
        migrations.AddField(
            model_name='cardtag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.Tag'),
        ),
        migrations.AddField(
            model_name='carddeck',
            name='deck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.Deck'),
        ),
        migrations.AddField(
            model_name='card',
            name='answer_freeform',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='answer_freeform', to='flash_cards.PartContainer', verbose_name='freeform answer'),
        ),
        migrations.AddField(
            model_name='card',
            name='answer_matching',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='flash_cards.MatchingAnswer', verbose_name='matching answer'),
        ),
        migrations.AddField(
            model_name='card',
            name='answer_multiple_choice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='flash_cards.MultipleChoiceContainer', verbose_name='multiple choice answer'),
        ),
        migrations.AddField(
            model_name='card',
            name='decks',
            field=models.ManyToManyField(through='flash_cards.CardDeck', to='flash_cards.Deck'),
        ),
        migrations.AddField(
            model_name='card',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.PartContainer'),
        ),
        migrations.AddField(
            model_name='card',
            name='rationale',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='answer_rationale', to='flash_cards.PartContainer', verbose_name='answer rationale'),
        ),
        migrations.AddField(
            model_name='card',
            name='tags',
            field=models.ManyToManyField(through='flash_cards.CardTag', to='flash_cards.Tag'),
        ),
    ]
