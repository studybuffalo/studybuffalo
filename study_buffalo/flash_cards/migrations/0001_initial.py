# Generated by Django 2.0.3 on 2018-05-31 18:10

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reviewed', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_reviewed', models.DateTimeField(blank=True, default=None, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CardDeck',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.Card')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CardFeedback',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_submitted', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment', models.TextField(max_length=2000)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.Card')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CardTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.Card')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Deck',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('deck_name', models.CharField(max_length=255)),
                ('reviewed', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_reviewed', models.DateTimeField(blank=True, default=None, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeckFeedback',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_submitted', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment', models.TextField(max_length=2000)),
                ('deck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.Deck')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeckStats',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_completed', models.DateTimeField(default=django.utils.timezone.now)),
                ('number_questions', models.IntegerField(default=0, verbose_name='number of questions')),
                ('number_correct', models.IntegerField(default=0)),
                ('number_partially_correct', models.IntegerField(default=0)),
                ('number_incorrect', models.IntegerField(default=0)),
                ('deck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.Deck')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FreeformAnswerPart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('media_type', models.CharField(choices=[('a', 'Audio'), ('i', 'Image'), ('t', 'Text'), ('v', 'Video')], default='t', max_length=1)),
                ('text', models.TextField(blank=True, max_length=2000, null=True)),
                ('media', models.FileField(blank=True, null=True, upload_to='flash_cards/')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='freeform_answer_parts', to='flash_cards.Card')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalCard',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('reviewed', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_reviewed', models.DateTimeField(blank=True, default=None, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical card',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCardDeck',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('card', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Card')),
                ('deck', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Deck')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical card deck',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCardFeedback',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('date_submitted', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment', models.TextField(max_length=2000)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('card', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Card')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical card feedback',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCardTag',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('card', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Card')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical card tag',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDeck',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('deck_name', models.CharField(max_length=255)),
                ('reviewed', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_reviewed', models.DateTimeField(blank=True, default=None, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical deck',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDeckFeedback',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('date_submitted', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment', models.TextField(max_length=2000)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('deck', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Deck')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical deck feedback',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDeckStats',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('date_completed', models.DateTimeField(default=django.utils.timezone.now)),
                ('number_questions', models.IntegerField(default=0, verbose_name='number of questions')),
                ('number_correct', models.IntegerField(default=0)),
                ('number_partially_correct', models.IntegerField(default=0)),
                ('number_incorrect', models.IntegerField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('deck', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Deck')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical deck stats',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalFreeformAnswerPart',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('order', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('media_type', models.CharField(choices=[('a', 'Audio'), ('i', 'Image'), ('t', 'Text'), ('v', 'Video')], default='t', max_length=1)),
                ('text', models.TextField(blank=True, max_length=2000, null=True)),
                ('media', models.TextField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('card', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Card')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical freeform answer part',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMatchingAnswer',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('side', models.CharField(choices=[('l', 'Left'), ('r', 'Right')], default='l', max_length=1)),
                ('order', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('card', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Card')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical matching answer',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMatchingAnswerPart',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('order', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('media_type', models.CharField(choices=[('a', 'Audio'), ('i', 'Image'), ('t', 'Text'), ('v', 'Video')], default='t', max_length=1)),
                ('text', models.TextField(blank=True, max_length=2000, null=True)),
                ('media', models.TextField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical matching answer part',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMultipleChoiceAnswer',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('order', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('correct', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('card', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Card')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical multiple choice answer',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMultipleChoiceAnswerPart',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('order', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('media_type', models.CharField(choices=[('a', 'Audio'), ('i', 'Image'), ('t', 'Text'), ('v', 'Video')], default='t', max_length=1)),
                ('text', models.TextField(blank=True, max_length=2000, null=True)),
                ('media', models.TextField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical multiple choice answer part',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalQuestionPart',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('order', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('media_type', models.CharField(choices=[('a', 'Audio'), ('i', 'Image'), ('t', 'Text'), ('v', 'Video')], default='t', max_length=1)),
                ('text', models.TextField(blank=True, max_length=2000, null=True)),
                ('media', models.TextField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('card', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Card')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical question part',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalRationalePart',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('order', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('media_type', models.CharField(choices=[('a', 'Audio'), ('i', 'Image'), ('t', 'Text'), ('v', 'Video')], default='t', max_length=1)),
                ('text', models.TextField(blank=True, max_length=2000, null=True)),
                ('media', models.TextField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('card', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Card')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical rationale part',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalReference',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('reference', models.TextField(max_length=500)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('card', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Card')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical reference',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSynonym',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('synonym_name', models.CharField(db_index=True, max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical synonym',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTag',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('tag_name', models.CharField(db_index=True, max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical tag',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalUserStats',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('number_decks', models.IntegerField(default=0, verbose_name='decks completed')),
                ('number_questions', models.IntegerField(default=0, verbose_name='questions completed')),
                ('number_correct', models.IntegerField(default=0)),
                ('number_partially_correct', models.IntegerField(default=0)),
                ('number_incorrect', models.IntegerField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user stats',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='MatchingAnswer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('side', models.CharField(choices=[('l', 'Left'), ('r', 'Right')], default='l', max_length=1)),
                ('order', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matching_answers', to='flash_cards.Card')),
                ('pair', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='flash_cards.MatchingAnswer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MatchingAnswerPart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('media_type', models.CharField(choices=[('a', 'Audio'), ('i', 'Image'), ('t', 'Text'), ('v', 'Video')], default='t', max_length=1)),
                ('text', models.TextField(blank=True, max_length=2000, null=True)),
                ('media', models.FileField(blank=True, null=True, upload_to='flash_cards/')),
                ('matching_answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matching_answer_parts', to='flash_cards.MatchingAnswer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MultipleChoiceAnswer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('correct', models.BooleanField(default=False)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='multiple_choice_answers', to='flash_cards.Card')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MultipleChoiceAnswerPart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('media_type', models.CharField(choices=[('a', 'Audio'), ('i', 'Image'), ('t', 'Text'), ('v', 'Video')], default='t', max_length=1)),
                ('text', models.TextField(blank=True, max_length=2000, null=True)),
                ('media', models.FileField(blank=True, null=True, upload_to='flash_cards/')),
                ('multiple_choice_answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='multiple_choice_answer_parts', to='flash_cards.MultipleChoiceAnswer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuestionPart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('media_type', models.CharField(choices=[('a', 'Audio'), ('i', 'Image'), ('t', 'Text'), ('v', 'Video')], default='t', max_length=1)),
                ('text', models.TextField(blank=True, max_length=2000, null=True)),
                ('media', models.FileField(blank=True, null=True, upload_to='flash_cards/')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_parts', to='flash_cards.Card')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RationalePart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('media_type', models.CharField(choices=[('a', 'Audio'), ('i', 'Image'), ('t', 'Text'), ('v', 'Video')], default='t', max_length=1)),
                ('text', models.TextField(blank=True, max_length=2000, null=True)),
                ('media', models.FileField(blank=True, null=True, upload_to='flash_cards/')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rationale_parts', to='flash_cards.Card')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reference', models.TextField(max_length=500)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='references', to='flash_cards.Card')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Synonym',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('synonym_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tag_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserStats',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number_decks', models.IntegerField(default=0, verbose_name='decks completed')),
                ('number_questions', models.IntegerField(default=0, verbose_name='questions completed')),
                ('number_correct', models.IntegerField(default=0)),
                ('number_partially_correct', models.IntegerField(default=0)),
                ('number_incorrect', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='synonym',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='synonyms', to='flash_cards.Tag'),
        ),
        migrations.AddField(
            model_name='historicalsynonym',
            name='tag',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Tag'),
        ),
        migrations.AddField(
            model_name='historicalmultiplechoiceanswerpart',
            name='multiple_choice_answer',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.MultipleChoiceAnswer'),
        ),
        migrations.AddField(
            model_name='historicalmatchinganswerpart',
            name='matching_answer',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.MatchingAnswer'),
        ),
        migrations.AddField(
            model_name='historicalmatchinganswer',
            name='pair',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.MatchingAnswer'),
        ),
        migrations.AddField(
            model_name='historicalcardtag',
            name='tag',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='flash_cards.Tag'),
        ),
        migrations.AddField(
            model_name='cardtag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.Tag'),
        ),
        migrations.AddField(
            model_name='carddeck',
            name='deck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flash_cards.Deck'),
        ),
        migrations.AddField(
            model_name='card',
            name='decks',
            field=models.ManyToManyField(through='flash_cards.CardDeck', to='flash_cards.Deck'),
        ),
        migrations.AddField(
            model_name='card',
            name='tags',
            field=models.ManyToManyField(through='flash_cards.CardTag', to='flash_cards.Tag'),
        ),
    ]
